The bare minimum to start using this thing:

  * Need a solid sprint summary
  * Add activity
  * Revise day(s)

Production install

  rake build
  gem install pkg/lifetracker-0.0.1.gem
  cd ~/.rbenv/versions/ree-1.8.7-2011.03/lib/ruby/gems/1.8/gems/lifetracker-0.0.1 # or maybe just do this from working dir?
  RAILS_ENV=production rake db:setup
  RAILS_ENV=production rake db:populate

Tasks

X * schema/migrations
X * Install
X   - gem install lifetracker
X   - database should live in ~/.lifetracker/
X   - populate the database
/   - should backup and migrate the database
X * get test env working
  * Edit a day
    - command line
      $ lifetracker edit
      $ lifetracker edit yesterday
      $ lifetracker edit 12/15

    - pseudocode
      day = Day.find_or_create_by_dt
      orig_day_text = day_text = day.to_s

      do
        write day_text
        open tempfile in $EDITOR
        day_text = read tempfile
        activities, errors = parse day_text
      until valid?

      if orig_day_text != day_text
        update day(activities)
      else
        "no changes"

    - format
      Start End   Dur   Cat    Memo
      ------ ----- ----- ---    ------------------
      08:15a 08:45 0.5hr PER    Morning routine
      08:45a             PER
      8 9 per Morning routine

      09:15 09:45 0.5hr PER    Pay bills
                  -----
                  1.0hr

    - line breaks when incontinuity

  * Sprint summary

Icebox
  * Add activity
    - ui
X     lifetracker add 9 10 per '#1234 - coding'
      lifetracker add 9 - sto '#1234 - refactor'
      lifetracker add 8:45p - sle ''
      lifetracker add now - sle ''
X   - cli
    - print errors
    - round to nearest quarter hour
    - print day after add
  * get test env working
    - print error
    - split over midnight
    - validations
      - category present
      - memo present
      - duplicate start time
      - overlapping activity
  * Run some queries for life activities
  * Routines or template days
